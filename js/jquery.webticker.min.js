(function(e) {
    var f = (function() {
        var k = document.createElement("p").style,
            j = ["ms", "O", "Moz", "Webkit"];
        if (k.transition == "") {
            return true
        }
        while (j.length) {
            if (j.pop() + "Transition" in k) {
                return true
            }
        }
        return false
    })();

    function b(k, j) {
        var m = k.data("settings");
        if (typeof j === "undefined") {
            j = false
        }
        if (j) {
            a(k)
        }
        var l = h(k);
        k.animate(l.css, l.time, "linear", function() {
            k.css(m.direction, "0");
            b(k, true)
        })
    }

    function h(j) {
        var m = j.data("settings");
        var n = j.children().first();
        var o = Math.abs(-j.css(m.direction).replace("px", "").replace("auto", "0") - n.outerWidth(true));
        var m = j.data("settings");
        var k = o * 1000 / m.speed;
        var l = {};
        l[m.direction] = j.css(m.direction).replace("px", "").replace("auto", "0") - o;
        return {
            css: l,
            time: k
        }
    }

    function a(j) {
        var k = j.data("settings");
        j.css("transition-duration", "0s").css(k.direction, "0");
        var l = j.children().first();
        if (l.hasClass("webticker-init")) {
            l.remove()
        } else {
            j.children().last().after(l)
        }
    }

    function d(k, j) {
        if (typeof j === "undefined") {
            j = false
        }
        if (j) {
            a(k)
        }
        var l = h(k);
        var m = l.time / 1000;
        m += "s";
        k.css(l.css).css("transition-duration", m)
    }

    function i(l, k, j) {
        var m;
        e.get(l, function(o) {
            var n = e(o);
            n.find("item").each(function() {
                var q = e(this),
                    p = {
                        title: q.find("title").text(),
                        link: q.find("link").text()
                    };
                listItem = "<li><a href='" + p.link + "'>" + p.title + "</a></li>";
                m += listItem
            });
            j.webTicker("update", m, k)
        })
    }

    function g(l) {
        var n = l.data("settings");
        l.width("auto");
        var m = 0;
        l.children("li").each(function() {
            m += e(this).outerWidth(true)
        });
        if (m < l.parent().width() || l.children().length == 1) {
            if (n.duplicate) {
                itemWidth = Math.max.apply(Math, l.children().map(function() {
                    return e(this).width()
                }).get());
                while (m - itemWidth < l.parent().width() || l.children().length == 1) {
                    var o = l.children().clone();
                    l.append(o);
                    m = 0;
                    l.children("li").each(function() {
                        m += e(this).outerWidth(true)
                    });
                    itemWidth = Math.max.apply(Math, l.children().map(function() {
                        return e(this).width()
                    }).get())
                }
            } else {
                var k = l.parent().width() - m;
                k += l.find("li:first").width();
                var j = l.find("li:first").height();
                l.append('<li class="ticker-spacer" style="width:' + k + "px;height:" + j + 'px;"></li>')
            }
        }
        if (n.startEmpty) {
            var j = l.find("li:first").height();
            l.prepend('<li class="webticker-init" style="width:' + l.parent().width() + "px;height:" + j + 'px;"></li>')
        }
        m = 0;
        l.children("li").each(function() {
            m += e(this).outerWidth(true)
        });
        l.width(m + 200);
        widthCompare = 0;
        l.children("li").each(function() {
            widthCompare += e(this).outerWidth(true)
        });
        while (widthCompare >= l.width()) {
            l.width(l.width() + 200);
            widthCompare = 0;
            l.children("li").each(function() {
                widthCompare += e(this).outerWidth(true)
            })
        }
    }
    var c = {
        init: function(j) {
            j = jQuery.extend({
                speed: 50,
                direction: "left",
                moving: true,
                startEmpty: true,
                duplicate: false,
                rssurl: false,
                hoverpause: true,
                rssfrequency: 0,
                updatetype: "reset"
            }, j);
            return this.each(function() {
                jQuery(this).data("settings", j);
                var k = jQuery(this);
                k.addClass("newsticker");
                var m = k.wrap("<div class='mask'></div>");
                m.after("<span class='tickeroverlay-left'>&nbsp;</span><span class='tickeroverlay-right'>&nbsp;</span>");
                var l = k.parent().wrap("<div class='tickercontainer'></div>");
                g(k);
                if (j.rssurl) {
                    i(j.rssurl, j.type, k);
                    if (j.rssfrequency > 0) {
                        window.setInterval(function() {
                            i(j.rssurl, j.type, k)
                        }, j.rssfrequency * 1000 * 60)
                    }
                }
                if (f) {
                    k.css("transition-duration", "0s").css(j.direction, "0");
                    d(k, false);
                    k.on("transitionend webkitTransitionEnd oTransitionEnd otransitionend", function(n) {
                        if (!k.is(n.target)) {
                            return false
                        }
                        d(e(this), true)
                    })
                } else {
                    b(e(this))
                }
                if (j.hoverpause) {
                    k.hover(function() {
                        if (f) {
                            var n = e(this).css(j.direction);
                            e(this).css("transition-duration", "0s").css(j.direction, n)
                        } else {
                            jQuery(this).stop()
                        }
                    }, function() {
                        if (jQuery(this).data("settings").moving) {
                            if (f) {
                                d(e(this), false)
                            } else {
                                b(k)
                            }
                        }
                    })
                }
            })
        },
    };
    e.fn.webTicker = function(j) {
        if (c[j]) {
            return c[j].apply(this, Array.prototype.slice.call(arguments, 1))
        } else {
            if (typeof j === "object" || !j) {
                return c.init.apply(this, arguments)
            } else {
                e.error("Method " + j + " does not exist on jQuery.webTicker")
            }
        }
    }
})(jQuery);